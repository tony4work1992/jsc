/*
 * This source file was generated by the Gradle 'init' task
 */
package smartosc.jsc.applications;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.NullNode;

import smartosc.jsc.applications.etl.contants.EExecutor;
import smartosc.jsc.applications.etl.transform.ba_factory.ExecutorFactory;
import smartosc.jsc.applications.etl.transform.ba_nodes.Executable;
import smartosc.jsc.applications.etl.transform.ba_strategy.ExecutionStrategy;

public class App {

    public static void main(String[] args) {
        String config = "{\"nodes\":{\"0\":{\"id\":0,\"name\":\"LOAD_DATA\",\"config\":{\"params\":[{\"id\":1,\"sku\":\"EXAM.SKU.01\",\"title\":\"Smart Tivi 4K\",\"width\":120,\"height\":40,\"category\":\"TIVI\",\"image\":\"https://lg.com/sku/1\",\"country\":\"VN\"},{\"id\":2,\"sku\":\"EXAM.SKU.02\",\"title\":\"Smart Tivi 4K Untra Width\",\"width\":120,\"height\":40,\"category\":\"TIVI\",\"image\":\"https://lg.com/sku/2\",\"country\":\"VN\"},{\"id\":3,\"sku\":\"EXAM.SKU.03\",\"title\":\"Smart Tivi 2K\",\"width\":120,\"height\":40,\"category\":\"TIVI\",\"image\":\"https://lg.com/sku/3\",\"country\":\"VN\"},{\"id\":4,\"sku\":\"EXAM.SKU.04\",\"title\":\"Smart Tivi 2K Untra Width\",\"width\":120,\"height\":40,\"category\":\"TIVI\",\"image\":\"https://lg.com/sku/4\",\"country\":\"VN\"},{\"id\":5,\"sku\":\"EXAM.SKU.05\",\"title\":\"Smart Tivi 8K\",\"width\":120,\"height\":40,\"category\":\"TIVI\",\"image\":\"https://lg.com/sku/5\",\"country\":\"VN\"},{\"id\":6,\"sku\":\"EXAM.SKU.06\",\"title\":\"Smart Tivi 8K Untra Width\",\"width\":120,\"height\":40,\"category\":\"TIVI\",\"image\":\"https://lg.com/sku/6\",\"country\":\"VN\"},{\"id\":7,\"sku\":\"EXAM.SKU.07\",\"title\":\"Projector 4K\",\"width\":20,\"height\":30,\"category\":\"Projector\",\"image\":\"https://lg.com/sku/7\",\"country\":\"VN\"},{\"id\":8,\"sku\":\"EXAM.SKU.08\",\"title\":\"Projector 4K Untra Width\",\"width\":20,\"height\":30,\"category\":\"Projector\",\"image\":\"https://lg.com/sku/8\",\"country\":\"VN\"},{\"id\":9,\"sku\":\"EXAM.SKU.09\",\"title\":\"Projector 2K\",\"width\":20,\"height\":30,\"category\":\"Projector\",\"image\":\"https://lg.com/sku/9\",\"country\":\"VN\"},{\"id\":10,\"sku\":\"EXAM.SKU.10\",\"title\":\"Projector 2K Untra Width\",\"width\":20,\"height\":30,\"category\":\"Projector\",\"image\":\"https://lg.com/sku/10\",\"country\":\"VN\"},{\"id\":11,\"sku\":\"EXAM.SKU.11\",\"title\":\"Projector 8K\",\"width\":20,\"height\":30,\"category\":\"Projector\",\"image\":\"https://lg.com/sku/11\",\"country\":\"VN\"},{\"id\":12,\"sku\":\"EXAM.SKU.12\",\"title\":\"Projector 8K Untra Width\",\"width\":20,\"height\":30,\"category\":\"Projector\",\"image\":\"https://lg.com/sku/12\",\"country\":\"VN\"},{\"id\":13,\"sku\":\"EXAM.SKU.13\",\"title\":\"Soundbar Bluetooth A\",\"width\":140,\"height\":15,\"category\":\"Soundbar\",\"image\":\"https://lg.com/sku/13\",\"country\":\"UK\"},{\"id\":14,\"sku\":\"EXAM.SKU.14\",\"title\":\"Soundbar Bluetooth A\",\"width\":140,\"height\":15,\"category\":\"Soundbar\",\"image\":\"https://lg.com/sku/14\",\"country\":\"UK\"},{\"id\":15,\"sku\":\"EXAM.SKU.15\",\"title\":\"Soundbar Bluetooth A\",\"width\":140,\"height\":15,\"category\":\"Soundbar\",\"image\":\"https://lg.com/sku/15\",\"country\":\"UK\"},{\"id\":16,\"sku\":\"EXAM.SKU.16\",\"title\":\"Soundbar Bluetooth A\",\"width\":140,\"height\":15,\"category\":\"Soundbar\",\"image\":\"https://lg.com/sku/16\",\"country\":\"UK\"},{\"id\":17,\"sku\":\"EXAM.SKU.17\",\"title\":\"Soundbar Bluetooth A\",\"width\":140,\"height\":15,\"category\":\"Soundbar\",\"image\":\"https://lg.com/sku/17\",\"country\":\"VN\"},{\"id\":18,\"sku\":\"EXAM.SKU.18\",\"title\":\"Soundbar Bluetooth A\",\"width\":140,\"height\":15,\"category\":\"Soundbar\",\"image\":\"https://lg.com/sku/18\",\"country\":\"VN\"},{\"id\":19,\"sku\":\"EXAM.SKU.19\",\"title\":\"Soundbar Bluetooth A\",\"width\":140,\"height\":15,\"category\":\"Soundbar\",\"image\":\"https://lg.com/sku/19\",\"country\":\"VN\"},{\"id\":20,\"sku\":\"EXAM.SKU.20\",\"title\":\"Soundbar Bluetooth A\",\"width\":140,\"height\":15,\"category\":\"Soundbar\",\"image\":\"https://lg.com/sku/20\",\"country\":\"VN\"},{\"id\":21,\"sku\":\"EXAM.SKU.21\",\"title\":\"Soundbar Bluetooth A\",\"width\":140,\"height\":15,\"category\":\"Soundbar\",\"image\":\"https://lg.com/sku/21\",\"country\":\"VN\"},{\"id\":22,\"sku\":\"EXAM.SKU.22\",\"title\":\"Soundbar Bluetooth A\",\"width\":140,\"height\":15,\"category\":\"Soundbar\",\"image\":\"https://lg.com/sku/22\",\"country\":\"VN\"}]},\"children\":[1],\"parent\":null},\"1\":{\"id\":1,\"name\":\"RENAME_COLUMNS\",\"config\":{\"params\":[{\"oldColumn\":\"title\",\"newColumn\":\"name\"}]},\"children\":[2],\"parent\":[0]},\"2\":{\"id\":2,\"name\":\"CONCAT\",\"config\":{\"params\":[{\"newColumn\":\"sku_country\",\"concatColumns\":[\"name\",\"country\"]}]},\"children\":[3],\"parent\":[1]},\"3\":{\"id\":3,\"name\":\"REMOVE_COLUMNS\",\"config\":{\"params\":[{\"column\":\"image\"}]},\"children\":[4,5],\"parent\":[2]},\"4\":{\"id\":4,\"name\":\"FILTER\",\"config\":{\"params\":[{\"filterColumn\":\"country\",\"operator\":\"=\",\"filterValue\":\"VN\"}]},\"children\":[],\"parent\":[3]},\"5\":{\"id\":5,\"name\":\"FILTER\",\"config\":{\"params\":[{\"filterColumn\":\"category\",\"operator\":\"=\",\"filterValue\":\"Soundbar\"}]},\"children\":[],\"parent\":[3]},\"6\":{\"id\":6,\"name\":\"ADD_COLUMNS\",\"config\":{\"params\":[{\"column\":\"salable\",\"value\":\"Y\"}]},\"children\":[],\"parent\":[4]},\"7\":{\"id\":7,\"name\":\"ADD_COLUMNS\",\"config\":{\"params\":[{\"column\":\"salable\",\"value\":\"N\"}]},\"children\":[],\"parent\":[5]},\"8\":{\"id\":8,\"name\":\"UNION\",\"config\":{\"params\":[\"6\",\"7\"]},\"children\":[],\"parent\":[6,7]}}}";
        Map<String, JsonNode> listResult = new HashMap<>();

        try {
            ObjectMapper mapper = new ObjectMapper();
            JsonNode configJsonNode = mapper.readTree(config);

            // #region Node Ordering
            List<JsonNode> nodeList = new ArrayList<>();
            configJsonNode.get("nodes").fieldNames().forEachRemaining(id -> nodeList.add(configJsonNode.get("nodes").get(id)));

            // Sort nodes based on the "parent" field
            nodeList.sort((node1, node2) -> {
                JsonNode parent1 = node1.get("parent");
                JsonNode parent2 = node2.get("parent");

                // Handle null parents (prioritize null parents)
                if (parent1.isNull() && !parent2.isNull()) {
                    return -1;
                }
                if (!parent1.isNull() && parent2.isNull()) {
                    return 1;
                }

                // Both parents are non-null: compare greatest parent ID in descending order
                if (!parent1.isNull() && !parent2.isNull()) {
                    int maxParent1 = maxParentId(parent1);
                    int maxParent2 = maxParentId(parent2);
                    return Integer.compare(maxParent1, maxParent2);
                }

                // Both parents are null or both parents are empty
                return 0;
            });
            // #endregion

            for (JsonNode node : nodeList) {
                EExecutor executorName = EExecutor.valueOf(node.get("name").asText());
                Executable executor = ExecutorFactory.createExecutor(executorName, listResult);

                ExecutionStrategy executionStrategy = new ExecutionStrategy();
                executionStrategy.setExecutionStrategy(executor);
                String[] listParentId = mapper.treeToValue(node.get("parent"), String[].class);
                ArrayNode inputData = null;
                if (node.get("parent") != NullNode.instance) {
                    inputData = mapper.createArrayNode();
                    for (String parentId : listParentId) {
                        inputData.addAll((ArrayNode) listResult.get(parentId));
                    }
                }
                JsonNode result = executionStrategy.execute(node.get("config").get("params"), inputData);
                listResult.put(node.get("id").asText(), result);
            }

            if (!listResult.isEmpty()) {
                System.out.println(listResult.get(String.valueOf(listResult.size() - 1)));
            } else {
                System.out.println("The list is empty or null.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    // Helper method to find the maximum parent ID
    private static int maxParentId(JsonNode parent) {
        int maxId = Integer.MIN_VALUE;
        if (parent.isArray()) {
            for (JsonNode id : parent) {
                maxId = Math.max(maxId, id.asInt());
            }
        }
        return maxId == Integer.MIN_VALUE ? -1 : maxId;
    }
}
