/*
 * This source file was generated by the Gradle 'init' task
 */
package smartosc.jsc.applications.cart;

public class Cart {
    private int id;
    private double grandTotal;
    private double discount;
    private String couponCode;
    private int quantity;
    private String customerEmail;

    // Constructor
    public Cart(int id, double grandTotal, double discount, String couponCode, int quantity, String customerEmail) {
        this.id = id;
        this.grandTotal = grandTotal;
        this.discount = discount;
        this.couponCode = couponCode;
        this.quantity = quantity;
        this.customerEmail = customerEmail;
    }

    // Default Constructor
    public Cart() {}

    // Getter and Setter methods
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public double getGrandTotal() {
        return grandTotal;
    }

    public void setGrandTotal(double grandTotal) {
        this.grandTotal = grandTotal;
    }

    public double getDiscount() {
        return discount;
    }

    public void setDiscount(double discount) {
        this.discount = discount;
    }

    public String getCouponCode() {
        return couponCode;
    }

    public void setCouponCode(String couponCode) {
        this.couponCode = couponCode;
    }

    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    public String getCustomerEmail() {
        return customerEmail;
    }

    public void setCustomerEmail(String customerEmail) {
        this.customerEmail = customerEmail;
    }

    public static double calculateTotalAfterDiscount(double grandTotal, double discount, String type) {
        if (grandTotal < 0 || discount < 0) {
            throw new IllegalArgumentException("Grand total and discount must be non-negative.");
        }

        if (type == null || type.isEmpty()) {
            throw new IllegalArgumentException("Discount type must be provided.");
        }

        double totalAfterDiscount = 0;

        if ("flat".equalsIgnoreCase(type)) {
            totalAfterDiscount = grandTotal - discount;
        } else if ("percent".equalsIgnoreCase(type)) {
            totalAfterDiscount = grandTotal - (grandTotal * discount / 100);
        } else {
            throw new IllegalArgumentException("Invalid discount type. Use 'flat' or 'percent'.");
        }

        return totalAfterDiscount;
    }
}